[{"C:\\Users\\hp\\Desktop\\Classroom\\src\\index.js":"1","C:\\Users\\hp\\Desktop\\Classroom\\src\\App.js":"2","C:\\Users\\hp\\Desktop\\Classroom\\src\\components\\Home.js":"3","C:\\Users\\hp\\Desktop\\Classroom\\src\\components\\Sidebar.js":"4","C:\\Users\\hp\\Desktop\\Classroom\\src\\components\\Signin.js":"5","C:\\Users\\hp\\Desktop\\Classroom\\src\\components\\Signup.js":"6","C:\\Users\\hp\\Desktop\\Classroom\\src\\components\\Button.js":"7","C:\\Users\\hp\\Desktop\\Classroom\\src\\components\\Nav.js":"8","C:\\Users\\hp\\Desktop\\Classroom\\src\\firebase.js":"9","C:\\Users\\hp\\Desktop\\Classroom\\src\\components\\Forms.js":"10","C:\\Users\\hp\\Desktop\\Classroom\\src\\components\\SidebarData.js":"11","C:\\Users\\hp\\Desktop\\Classroom\\src\\components\\Popup.js":"12","C:\\Users\\hp\\Desktop\\Classroom\\src\\components\\Select.js":"13","C:\\Users\\hp\\Desktop\\Classroom\\src\\components\\DatePickers.js":"14","C:\\Users\\hp\\Desktop\\Classroom\\src\\components\\usableForm.js":"15","C:\\Users\\hp\\Desktop\\Classroom\\src\\components\\Input.js":"16","C:\\Users\\hp\\Desktop\\Classroom\\src\\components\\Services.js":"17","C:\\Users\\hp\\Desktop\\Classroom\\src\\AddClassroom.js":"18","C:\\Users\\hp\\Desktop\\Classroom\\src\\components\\Card.js":"19"},{"size":153,"mtime":1608958724562,"results":"20","hashOfConfig":"21"},{"size":2218,"mtime":1611919065373,"results":"22","hashOfConfig":"21"},{"size":485,"mtime":1611661330888,"results":"23","hashOfConfig":"21"},{"size":4140,"mtime":1611919324830,"results":"24","hashOfConfig":"21"},{"size":2500,"mtime":1611846182383,"results":"25","hashOfConfig":"21"},{"size":4299,"mtime":1611846182456,"results":"26","hashOfConfig":"21"},{"size":305,"mtime":1611285981013,"results":"27","hashOfConfig":"21"},{"size":376,"mtime":1611661330889,"results":"28","hashOfConfig":"21"},{"size":555,"mtime":1611661330921,"results":"29","hashOfConfig":"21"},{"size":11748,"mtime":1611919324828,"results":"30","hashOfConfig":"21"},{"size":751,"mtime":1611846182380,"results":"31","hashOfConfig":"21"},{"size":1245,"mtime":1611846182367,"results":"32","hashOfConfig":"21"},{"size":967,"mtime":1610391157157,"results":"33","hashOfConfig":"21"},{"size":744,"mtime":1610387139508,"results":"34","hashOfConfig":"21"},{"size":969,"mtime":1610389479759,"results":"35","hashOfConfig":"21"},{"size":538,"mtime":1611846182364,"results":"36","hashOfConfig":"21"},{"size":1269,"mtime":1611846182372,"results":"37","hashOfConfig":"21"},{"size":1159,"mtime":1611919324809,"results":"38","hashOfConfig":"21"},{"size":491,"mtime":1611852652777,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"suor4s",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\hp\\Desktop\\Classroom\\src\\index.js",[],["84","85"],"C:\\Users\\hp\\Desktop\\Classroom\\src\\App.js",[],"C:\\Users\\hp\\Desktop\\Classroom\\src\\components\\Home.js",[],"C:\\Users\\hp\\Desktop\\Classroom\\src\\components\\Sidebar.js",[],"C:\\Users\\hp\\Desktop\\Classroom\\src\\components\\Signin.js",[],"C:\\Users\\hp\\Desktop\\Classroom\\src\\components\\Signup.js",["86"],"import \"./Signup.css\";\r\nimport React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Button from \"./Button\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { auth } from \"../firebase\";\r\n\r\nexport default function Register({ Education, Section, instructor, student }) {\r\n  const { register, handleSubmit, errors, watch } = useForm();\r\n  const onSubmit = (data) => {\r\n    console.log(data);\r\n  };\r\n  const history = useHistory();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  // const [section, setSection] = useState(\"\");\r\n  const signUp = (e) => {\r\n    e.preventDefault()\r\n\r\n    auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((auth) => {\r\n        console.log(auth);\r\n        if (auth) {\r\n          history.push(\"/Classroom\")\r\n        }\r\n      })\r\n      .catch(error => alert(error.message))\r\n  };\r\n\r\n  return (\r\n    <div className=\"register-page\">\r\n      <div className=\"lapiImage\"></div>\r\n\r\n      <form className=\"register-box\" onSubmit={handleSubmit(onSubmit)}>\r\n        <div className=\"register__header\">\r\n          <h2>Create Account</h2>\r\n        </div>\r\n\r\n        <div className=\"user-box\">\r\n          <label>UserName</label>\r\n          <input\r\n            name=\"username\"\r\n            placeholder=\"UserName\"\r\n            type=\"text\"\r\n            ref={register({ required: true })}\r\n          ></input>\r\n          {errors.username && (\r\n            <p className=\"error_message\">UserName is required</p>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"user-box\">\r\n          <label>Gender</label>\r\n          <input\r\n            name=\"gender\"\r\n            placeholder=\"Gender\"\r\n            type=\"text\"\r\n            ref={register({ required: false })}\r\n          ></input>\r\n        </div>\r\n\r\n        <div className=\"user-box\">\r\n          {Education && <label>Education</label>}\r\n          {Education && (\r\n            <input\r\n              name=\"education\"\r\n              placeholder=\"Education\"\r\n              type=\"text\"\r\n              ref={register({ required: true })}\r\n            />\r\n          )}{\" \"}\r\n          {errors.education && (\r\n            <p className=\"error_message\">Your education is required</p>\r\n          )}\r\n          {Section && <label>Section</label>}\r\n          {Section && (\r\n            <input\r\n              name=\"section\"\r\n              placeholder=\"Section\"\r\n              type=\"text\"\r\n              ref={register({ required: true })}\r\n              // value={section}\r\n              // onChange={(e) => setSection(e.target.value)}\r\n            />\r\n          )}{\" \"}\r\n          {errors.section && (\r\n            <p className=\"error_message\">section is required</p>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"user-box\">\r\n          <label>Email</label>\r\n          <input\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            type=\"email\"\r\n            ref={register({ required: true })}\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />{\" \"}\r\n          {errors.email && (\r\n            <p className=\"error_message\">Your email-id is required</p>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"user-box\">\r\n          <label>Password</label>\r\n          <input\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n            ref={register({ required: true })}\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />{\" \"}\r\n          {errors.password && (\r\n            <p className=\"error_message\">password is required</p>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"userSubmit\" onClick={signUp}>\r\n          <Button buttonName=\"submit\" label=\"Sign up\" />\r\n        </div>\r\n\r\n        <div className=\"register__footer\">\r\n          <p className=\"already\">\r\n            Already registered\r\n            {instructor && (\r\n              <Link to=\"/Instructor\" className=\"link-item\">\r\n                Sign in\r\n              </Link>\r\n            )}\r\n            {student && (\r\n              <Link to=\"/Student\" className=\"link-item\">\r\n                Sign in\r\n              </Link>\r\n            )}\r\n          </p>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}","C:\\Users\\hp\\Desktop\\Classroom\\src\\components\\Button.js",[],"C:\\Users\\hp\\Desktop\\Classroom\\src\\components\\Nav.js",[],"C:\\Users\\hp\\Desktop\\Classroom\\src\\firebase.js",["87"],"import firebase from \"firebase\"\r\n\r\n\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBB2Xb9ufs8Ev08c_lz_n2JGPM2AcY5xfA\",\r\n    authDomain: \"classroom-ff5af.firebaseapp.com\",\r\n    projectId: \"classroom-ff5af\",\r\n    storageBucket: \"classroom-ff5af.appspot.com\",\r\n    messagingSenderId: \"811762767050\",\r\n    appId: \"1:811762767050:web:56859bb552a7c9b4fd9033\",\r\n    measurementId: \"G-KQTWRP7745\"\r\n  };\r\n\r\n\r\n  const firebaseAp = firebase.initializeApp(firebaseConfig);\r\n  const db = firebase.firestore();\r\n\r\n  const auth = firebase.auth();\r\n  export{db, auth};","C:\\Users\\hp\\Desktop\\Classroom\\src\\components\\Forms.js",["88","89","90","91","92","93","94"],"import { Grid, IconButton, InputLabel } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { UsableForm, Form } from \"./usableForm\";\r\nimport Input from \"./Input\";\r\nimport Select from \"./Select\";\r\nimport { GetSectionCollection } from \"./Services\";\r\nimport DatePickers from \"./DatePickers\";\r\nimport Button from \"./Button\";\r\nimport employeeServices from \"./Services\";\r\nimport Popup from \"./Popup\";\r\nimport \"./Form.css\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n// const initialValues = {\r\n//   id: 0,\r\n//   ClassName: \"\",\r\n//   ProjectName: \"\",\r\n//   BookName: \"\",\r\n//   AssignmentName: \"\",\r\n//   Subject: \"\",\r\n//   Section: \"\",\r\n//   AuthorName: \"\",\r\n//   Features: \"\",\r\n//   SectionId: \"\",\r\n//   StartDate: new Date(),\r\n//   EndDate: new Date(),\r\n//   isPermanent: false,\r\n// };\r\n\r\nexport default function Forms({ AddClassroom, Project, Book, Assignment }) {\r\n  //   const validate = () => {\r\n  //     let temp = {};\r\n  //     temp.fullName = values.fullName ? \"\" : \"This field is required\";\r\n  //     temp.email = /$^|.*.@.*..*/.test(values.email) ? \"\" : \"Email is not valid\";\r\n  //     temp.mobile = values.mobile.length > 9 ? \"\" : \"Minimun 10 numbers required\";\r\n  //     temp.SectionId =\r\n  //       values.SectionId.length != 0 ? \"\" : \"This field is required\";\r\n  //     SetErrors({\r\n  //       ...temp,\r\n  //     });\r\n\r\n  //     return Object.values(temp).every((x) => x == \"\");\r\n  //   };\r\n\r\n  // const {\r\n  //   values,\r\n  //   setValues,\r\n  //   errors,\r\n  //   SetErrors,\r\n  //   handleInputChange,\r\n  // } = UsableForm(initialValues);\r\n\r\n  // const handleSubmit = (e) => {\r\n  //   e.preventDefault();\r\n  //   if (validate()) {\r\n  //     // employeeServices.insertEmployee(values);\r\n  //     console.log(values);\r\n  //   }\r\n  // };\r\n\r\n  const clickme = () => {\r\n    console.log(className);\r\n  };\r\n  const [className, setClassName] = useState(\"\");\r\n  const [subject, setSubject] = useState(\"\");\r\n  const [roomLink, setRoomLink] = useState(\"\");\r\n  const [section, setSection] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [endDate, setEndDate] = useState(\"\");\r\n  const [projectName, setProjectName] = useState(\"\");\r\n  const [feature, setFeature] = useState(\"\");\r\n  const [bookName, setBookName] = useState(\"\");\r\n  const [authorName, setAuthorName] = useState(\"\");\r\n  const [bookImage, setBookImage] = useState(\"\");\r\n  const [bookPdf, setBookPdf] = useState(\"\");\r\n  const [assignmentTitle, setAssignmentTitle] = useState(\"\");\r\n  const [instruction, setInstruction] = useState(\"\");\r\n  const [assignmentPdf, setAssignmentPdf] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <Form >\r\n        <Grid container>\r\n          <Grid item xs={12}>\r\n            {AddClassroom && (\r\n              <Input\r\n                variant=\"outlined\"\r\n                label=\"Class Name\"\r\n                name=\"ClassName\"\r\n                value={className}\r\n                // onChange={handleInputChange}\r\n                onChange={(e) => setClassName(e.target.value)}\r\n                // error={errors.ClassName}\r\n              />\r\n            )}\r\n\r\n            {AddClassroom && (\r\n              <Input\r\n                variant=\"outlined\"\r\n                label=\"Subject\"\r\n                name=\"Subject\"\r\n                // value={values.Subject}\r\n                // onChange={handleInputChange}\r\n                // error={errors.Subject}\r\n                value={subject}\r\n                onChange={(e) => setSubject(e.target.value)}\r\n              />\r\n            )}\r\n\r\n            {AddClassroom && (\r\n              <Input\r\n                variant=\"outlined\"\r\n                label=\"Room Link\"\r\n                name=\"RoomLink\"\r\n                // value={values.RoomLink}\r\n                // onChange={handleInputChange}\r\n                // error={errors.RoomLink}\r\n                value={roomLink}\r\n                onChange={(e) => setRoomLink(e.target.value)}\r\n              />\r\n            )}\r\n\r\n            {AddClassroom && (\r\n              <Select\r\n                label=\"Section\"\r\n                name=\"Section\"\r\n                // value={values.SectionId}\r\n                // onChange={handleInputChange}\r\n                options={GetSectionCollection}\r\n                // error={errors.SectionId}\r\n                value={section}\r\n                onChange={(e) => setSection(e.target.value)}\r\n              />\r\n            )}\r\n\r\n            {AddClassroom && (\r\n              <DatePickers\r\n                label=\"Start Date\"\r\n                name=\"StartDate\"\r\n                // value={values.StartDate}\r\n                // onChange={handleInputChange}\r\n                value={startDate}\r\n                onChange={(e) => setStartDate(e.target.value)}\r\n              />\r\n            )}\r\n\r\n            {AddClassroom && (\r\n              <DatePickers\r\n                label=\"End Date\"\r\n                name=\"EndDate\"\r\n                // value={values.EndDate}\r\n                // onChange={handleInputChange}\r\n                value={endDate}\r\n                onChange={(e) => setEndDate(e.target.value)}\r\n              />\r\n            )}\r\n\r\n            {Project && (\r\n              <Input\r\n                variant=\"outlined\"\r\n                label=\"Project Name\"\r\n                name=\"ProjectName\"\r\n                // value={values.ProjectName}\r\n                // onChange={handleInputChange}\r\n                // error={errors.ProjectName}\r\n                value={projectName}\r\n                onChange={(e) => setProjectName(e.target.value)}\r\n              />\r\n            )}\r\n\r\n            {Project && (\r\n              <Input\r\n                variant=\"outlined\"\r\n                id=\"outlined-textarea\"\r\n                multiline\r\n                label=\"Features\"\r\n                name=\"Features\"\r\n                // value={values.Features}\r\n                // onChange={handleInputChange}\r\n                // error={errors.Features}\r\n                value={feature}\r\n                onChange={(e) => setFeature(e.target.value)}\r\n              />\r\n            )}\r\n            {Book && (\r\n              <Input\r\n                variant=\"outlined\"\r\n                label=\"Book Name\"\r\n                name=\"BookName\"\r\n                // value={values.BookName}\r\n                // onChange={handleInputChange}\r\n                // error={errors.BookName}\r\n                value={bookName}\r\n                onChange={(e) => setBookName(e.target.value)}\r\n              />\r\n            )}\r\n\r\n            {Book && (\r\n              <Input\r\n                variant=\"outlined\"\r\n                label=\"Author Name\"\r\n                name=\"AuthorName\"\r\n                // value={values.AuthorName}\r\n                // onChange={handleInputChange}\r\n                // error={errors.AuthorName}\r\n                value={authorName}\r\n                onChange={(e) => setAuthorName(e.target.value)}\r\n              />\r\n            )}\r\n            {Book && (\r\n              <input\r\n                style={{\r\n                  fontSize: \"20px\",\r\n                  padding: \"10px\",\r\n                  outline: \"none\",\r\n                }}\r\n                variant=\"outlined\"\r\n                name=\"bookImage\"\r\n                accept=\"image/*\"\r\n                // value={values.bookImage}\r\n                // onChange={handleInputChange}\r\n                // error={errors.bookImage}\r\n                type=\"file\"\r\n                value={bookImage}\r\n                onChange={(e) => setBookImage(e.target.value)}\r\n              />\r\n            )}\r\n            {Book && (\r\n              <>\r\n                {\" \"}\r\n                <input\r\n                  style={{\r\n                    fontSize: \"20px\",\r\n                    padding: \"10px\",\r\n                    outline: \"none\",\r\n                  }}\r\n                  // name=\"filesuploaded\"\r\n                  // value={values.filesuploaded}\r\n                  // onChange={handleInputChange}\r\n                  // error={errors.filesuploaded}\r\n                  variant=\"outlined\"\r\n                  type=\"file\"\r\n                  name=\"bookPdf\"\r\n                  value={bookPdf}\r\n                  onChange={(e) => setBookPdf(e.target.value)}\r\n                />\r\n              </>\r\n            )}\r\n            {Assignment && (\r\n              <Input\r\n                variant=\"outlined\"\r\n                label=\"Assignment Title\"\r\n                name=\"AssignmentTitle\"\r\n                // value={values.AssignmentTitle}\r\n                // onChange={handleInputChange}\r\n                // error={errors.AssignmentTitle}\r\n                value={assignmentTitle}\r\n                onChange={(e) => setAssignmentTitle(e.target.value)}\r\n              />\r\n            )}\r\n            {Assignment && (\r\n              <Input\r\n                variant=\"outlined\"\r\n                id=\"outlined-textarea\"\r\n                multiline\r\n                label=\"Instructions\"\r\n                name=\"Instructions\"\r\n                // value={values.Instructions}\r\n                // onChange={handleInputChange}\r\n                // error={errors.Instructions}\r\n                value={instruction}\r\n                onChange={(e) => setInstruction(e.target.value)}\r\n              />\r\n            )}\r\n            {Assignment && (\r\n              <>\r\n                <input\r\n                  style={{\r\n                    fontSize: \"20px\",\r\n                    padding: \"10px\",\r\n                    outline: \"none\",\r\n                  }}\r\n                  variant=\"outlined\"\r\n                  label=\"Assignment Pdf\"\r\n                  name=\"AssignmentPdf\"\r\n                  // value={values.AssignmentPdf}\r\n                  // onChange={handleInputChange}\r\n                  // error={errors.AssignmentPdf}\r\n                  type=\"file\"\r\n                  value={assignmentPdf}\r\n                  onChange={(e) => setAssignmentPdf(e.target.value)}\r\n                />\r\n              </>\r\n            )}\r\n            <Button label=\"Submit\" buttonName=\"add\" onClick={clickme}/>\r\n          </Grid>\r\n        </Grid>\r\n      </Form>\r\n      {/* </Popup> */}\r\n    </>\r\n    // </Paper>\r\n  );\r\n}\r\n\r\n// eslint-disable-next-line no-lone-blocks\r\n{\r\n  /* {AddClassroom && (\r\n                <Input\r\n                  variant=\"outlined\"\r\n                  label=\"Email\"\r\n                  name=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleInputChange}\r\n                  error={errors.email}\r\n                />\r\n              )} */\r\n}\r\n// eslint-disable-next-line no-lone-blocks\r\n{\r\n  /* {Parul && (\r\n                <Input\r\n                  variant=\"outlined\"\r\n                  label=\"Mobile\"\r\n                  name=\"mobile\"\r\n                  value={values.mobile}\r\n                  onChange={handleInputChange}\r\n                  error={errors.mobile}\r\n                />\r\n              )} */\r\n}\r\n\r\n// eslint-disable-next-line no-lone-blocks\r\n{\r\n  /* <CheckBox\r\n                label=\"Permanent\"\r\n                name=\"isPermanent\"\r\n                value={values.isPermanent}\r\n                onChange={handleInputChange}\r\n              /> */\r\n}\r\n","C:\\Users\\hp\\Desktop\\Classroom\\src\\components\\SidebarData.js",[],"C:\\Users\\hp\\Desktop\\Classroom\\src\\components\\Popup.js",[],"C:\\Users\\hp\\Desktop\\Classroom\\src\\components\\Select.js",[],"C:\\Users\\hp\\Desktop\\Classroom\\src\\components\\DatePickers.js",[],"C:\\Users\\hp\\Desktop\\Classroom\\src\\components\\usableForm.js",[],"C:\\Users\\hp\\Desktop\\Classroom\\src\\components\\Input.js",["95"],"import { TextField } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nexport default function Input(props) {\r\n\r\n    const {id,name,label,value,error=null,onChange,type,url,accept} = props;\r\n    return (\r\n        <TextField\r\n        variant=\"outlined\"\r\n        label={label}\r\n        name={name}\r\n        value={value}\r\n        // type={type}\r\n        onChange={onChange}\r\n        url={url}\r\n        id={id}\r\n        multiline\r\n        accept={accept}\r\n        {...(error && {error:true, helperText:error })}\r\n    />\r\n   \r\n    )\r\n}\r\n","C:\\Users\\hp\\Desktop\\Classroom\\src\\components\\Services.js",["96"],"export const GetSectionCollection = [\r\n    { id: '1', title: 'Class I' },\r\n    { id: '2', title: 'Class II' },\r\n    { id: '3', title: 'Class III' },\r\n    { id: '4', title: 'Class IV' },\r\n    { id: '5', title: 'Class V' },\r\n    { id: '6', title: 'Class VI' },\r\n    { id: '7', title: 'Class VII' },\r\n    { id: '8', title: 'Class VIII' },\r\n    { id: '9', title: 'Class IX' },\r\n    { id: '10', title: 'Class X' },\r\n];\r\n\r\nexport default function employeeServices(){\r\nconst KEYS = {\r\n    employees: \"employees\",\r\n    employeeId: \"employeeId\",\r\n}\r\n\r\n\r\n function insertEmployee(data) {\r\n    let employees = getAllEmployees();\r\n    data['id'] = generateEmployeeId();\r\n    employees.push(data)\r\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees))\r\n}\r\n\r\n function generateEmployeeId() {\r\n    if (localStorage.getItem(KEYS.employeeId) == null)\r\n        localStorage.setItem(KEYS.employeeId, \"0\")\r\n    var id = parseInt(localStorage.getItem(KEYS.employeeId))\r\n        localStorage.setItem(KEYS.employeeId, (++id).toString());\r\n    return id;\r\n}\r\n\r\n function getAllEmployees() {\r\n    if (localStorage.getItem(KEYS.employees) == null)\r\n        localStorage.setItem(KEYS.employees, JSON.stringify([]))\r\n    return JSON.parse(localStorage.getItem(KEYS.employees));\r\n}\r\n}","C:\\Users\\hp\\Desktop\\Classroom\\src\\AddClassroom.js",[],"C:\\Users\\hp\\Desktop\\Classroom\\src\\components\\Card.js",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":9,"column":43,"nodeType":"103","messageId":"104","endLine":9,"endColumn":48},{"ruleId":"101","severity":1,"message":"105","line":17,"column":9,"nodeType":"103","messageId":"104","endLine":17,"endColumn":19},{"ruleId":"101","severity":1,"message":"106","line":1,"column":16,"nodeType":"103","messageId":"104","endLine":1,"endColumn":26},{"ruleId":"101","severity":1,"message":"107","line":1,"column":28,"nodeType":"103","messageId":"104","endLine":1,"endColumn":38},{"ruleId":"101","severity":1,"message":"108","line":11,"column":8,"nodeType":"103","messageId":"104","endLine":11,"endColumn":13},{"ruleId":"101","severity":1,"message":"109","line":12,"column":10,"nodeType":"103","messageId":"104","endLine":12,"endColumn":21},{"ruleId":"110","severity":1,"message":"111","line":40,"column":31,"nodeType":"112","messageId":"113","endLine":40,"endColumn":33},{"ruleId":"110","severity":1,"message":"114","line":45,"column":47,"nodeType":"112","messageId":"113","endLine":45,"endColumn":49},{"ruleId":"101","severity":1,"message":"115","line":50,"column":5,"nodeType":"103","messageId":"104","endLine":50,"endColumn":14},{"ruleId":"101","severity":1,"message":"116","line":6,"column":52,"nodeType":"103","messageId":"104","endLine":6,"endColumn":56},{"ruleId":"101","severity":1,"message":"117","line":21,"column":11,"nodeType":"103","messageId":"104","endLine":21,"endColumn":25},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'watch' is assigned a value but never used.","Identifier","unusedVar","'firebaseAp' is assigned a value but never used.","'IconButton' is defined but never used.","'InputLabel' is defined but never used.","'Popup' is defined but never used.","'PhotoCamera' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'setValues' is assigned a value but never used.","'type' is assigned a value but never used.","'insertEmployee' is defined but never used.","no-global-assign","no-unsafe-negation"]